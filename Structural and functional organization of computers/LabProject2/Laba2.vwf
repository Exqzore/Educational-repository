/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	PRINT_OPTIONS = "Print_options_version 6\
range_start 0ps\
range_end 1.0us\
width 1\
names_percentage 25\
comments 1\
grid_lines 1\
time_bars 1\
name_every_page 0\
expand_groups 0\
print_all 1\
print_row_height 100";
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 1000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("clk_D")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("clk_in")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DCa[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DCa[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DCa[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DCa[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DCa[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DCa[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DCa[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DCa[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DCa[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DCa[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DCa[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DCa[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DCa[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DCa[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DCa[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DCa[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 0.005;
		LEVEL 0 FOR 0.005;
		NODE
		{
			REPEAT = 99998;
			LEVEL 1 FOR 0.005;
			LEVEL 0 FOR 0.005;
		}
		LEVEL 1 FOR 0.005;
		LEVEL 0 FOR 0.005;
	}
}

TRANSITION_LIST("clk_D")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.245;
		NODE
		{
			REPEAT = 1999;
			LEVEL 1 FOR 0.25;
			LEVEL 0 FOR 0.25;
		}
		LEVEL 1 FOR 0.25;
		LEVEL 0 FOR 0.005;
	}
}

TRANSITION_LIST("clk_in")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.045;
		NODE
		{
			REPEAT = 9999;
			LEVEL 1 FOR 0.05;
			LEVEL 0 FOR 0.05;
		}
		LEVEL 1 FOR 0.05;
		LEVEL 0 FOR 0.005;
	}
}

TRANSITION_LIST("DCa[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 7.245;
		NODE
		{
			REPEAT = 124;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 7.5;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.255;
	}
}

TRANSITION_LIST("DCa[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 6.745;
		NODE
		{
			REPEAT = 124;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 7.5;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.755;
	}
}

TRANSITION_LIST("DCa[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 6.245;
		NODE
		{
			REPEAT = 124;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 7.5;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.255;
	}
}

TRANSITION_LIST("DCa[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5.745;
		NODE
		{
			REPEAT = 124;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 7.5;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.755;
	}
}

TRANSITION_LIST("DCa[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5.245;
		NODE
		{
			REPEAT = 124;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 7.5;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.255;
	}
}

TRANSITION_LIST("DCa[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4.745;
		NODE
		{
			REPEAT = 124;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 7.5;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.755;
	}
}

TRANSITION_LIST("DCa[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4.245;
		NODE
		{
			REPEAT = 124;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 7.5;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 3.255;
	}
}

TRANSITION_LIST("DCa[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3.745;
		NODE
		{
			REPEAT = 124;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 7.5;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 3.755;
	}
}

TRANSITION_LIST("DCa[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3.245;
		NODE
		{
			REPEAT = 124;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 7.5;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 4.255;
	}
}

TRANSITION_LIST("DCa[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2.745;
		NODE
		{
			REPEAT = 124;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 7.5;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 4.755;
	}
}

TRANSITION_LIST("DCa[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2.245;
		NODE
		{
			REPEAT = 124;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 7.5;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 5.255;
	}
}

TRANSITION_LIST("DCa[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1.745;
		NODE
		{
			REPEAT = 124;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 7.5;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 5.755;
	}
}

TRANSITION_LIST("DCa[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1.245;
		NODE
		{
			REPEAT = 124;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 7.5;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 6.255;
	}
}

TRANSITION_LIST("DCa[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.745;
		NODE
		{
			REPEAT = 124;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 7.5;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 6.755;
	}
}

TRANSITION_LIST("DCa[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.245;
		NODE
		{
			REPEAT = 124;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 7.5;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 7.255;
	}
}

TRANSITION_LIST("DCa[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 0.245;
		NODE
		{
			REPEAT = 124;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 7.5;
		LEVEL 1 FOR 0.255;
	}
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "clk_in";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "clk_D";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "DCa[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "DCa[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "DCa[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "DCa[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "DCa[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "DCa[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "DCa[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "DCa[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "DCa[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "DCa[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "DCa[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "DCa[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "DCa[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "DCa[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "DCa[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 17;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "DCa[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 18;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 999995;
	MASTER = TRUE;
}
;
